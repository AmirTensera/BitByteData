matrix:
    include:
    - language: objective-c
      osx_image: xcode9.2
      before_deploy:
      - brew update
      # Update Carthage.
      # `brew outdated` is necessary to prevent build error when there is no updates for Carthage.
      - brew outdated carthage || brew upgrade carthage
      # Install SourceKitten and Jazzy.
      - brew install sourcekitten
      - gem install jazzy
      # Generate documentation.
      - sourcekitten doc --spm-module BitByteData > docs.json
      - jazzy 
      # Build Carthage archive.
      - swift package generate-xcodeproj
      - carthage build --no-skip-current
      - carthage archive BitByteData
      script:
      - swift build
      - swift test
      - swift build -c release # Check Release build just in case.
      deploy:
      - provider: releases
        skip_cleanup: true
        api_key:
          secure: O4qjMPmPw9s+cV8W0iAdJr+kSkLd0y2VDzFbAUuqSMQcc5yN2Spyfe+Wm+IWSSJda5mqVoO9KYr4qvMD7YT/oysHV8RAVuDqPe85tqsEUO5TSHUPPOKHcGuxmtIJTdddAGGuDxV4F1Ow2W97clPdzi8NM87D6zRSt0eG6Di8NfWFuG/QSDjEjIs2fMPxS+NUQtxF/T4jqNxXmAVbFxnwJXeIJWiAHEFME3H3J2MpfmwzxSakmtBUrNE2oknHps7qq/isyyAjeo96LpZl3NqRtLz7o5YTOOQYsGdNGE4IjUcDUNNmntNTNFf5b+M6mMBaQ5fpb13hBZ3brpb7ajKgS9HyfPbgIgBVldjz1StwbJcnxTUrV3jgw1pHtYstIP9p8gZZtHowDGh5xGIvb6NVryASBHi6DGK/rC774G/BfhhjTXqRuogrRAuuWB9Vfe8wDTDdkUWLpcchPkneEW/LhGokWVoeJYMJP7UgIoX9Ws0fDKwUg0X4aDhdN56yc969bDvXaGVCQW79hu1AUHKaSrPAKKD5tkt5ZNZCALzxHfOJsXxOe6WkmqC4q3AR53RIxXXxwZW4/Dlbl/r38N+uldvK915tvPVAOaEMxkdmY9VsHxGjohHWeoMs61QCjWGZmQ3qDUxclk+lyXH7jrtBfGTR+S9VmVt0+bqzONPlbHQ=
        file: "BitByteData.framework.zip"
        on:
          tags: true
      - provider: pages
        skip_cleanup: true
        github_token:
          secure: IPkYDJ7ZSXoXUUPLmOxpLVOTO+egxcHSIeIwE+/IUjErvE8HhJ+DeIFD3tVyeaAu1IEkpsNX/kunNHDMJu0Zo3cMeqVsBlJ4lziApOP7RBDYOV9jJjeWKbXvXpxN4cvFbfSzMCxdhilXX282uxm+3MbipLayU68OTzMFKZYjGNzga88Dydqk3bN1akJ5WlbsdppvEnEXJSA8uXNDAan41sxcCfgLwypjyQyRaQclujZw8go4+nw3xazXwKtcmakUJRWuEkds5SYDedGBoP70T3amQu3OAAX2E3P8yHnv7q9+8/uG+y0d1cBuJcSfEL0covqEJcKjJOQO61NH+o7eSLWsAdfgFuOTfAMeg1jOAb6IUfBqtNtjQZPAcm7fWdKrMuG8V/sqkeFhpoYPDr3schTwFx2BMq/x5ag+Mc7OBBglQMefI7AdcBV8/m6QqQBym1W62UJp5OvaKQg+4D4msR0Tf4AFvO9K8SnV1RsaMOeq4ZuHtTkDjp0Fr1zuI0pAjKsQ19IPUvDyqblVZsteKFmkIPWs6bqwua+eVae5ZIN7/9vahQiwz/trIS2ZjxmZKiDGErFeou9AAUs707xRmD7SUy7ygrp+KvdaqIu+OpJNFjWf/b7G1JW7bkSw1cUzARtkaBP7MfI27DrzicMd6QtIkGmZQq/LdG8sCs72a+Q=
        local_dir: docs
        on:
          tags: true
          # Don't upload documentation if it is a test release.
          condition: $(git describe) != *"test"*
    - language: generic
      os: linux
      sudo: required
      dist: trusty
      install:
      - eval "$(curl -sL https://gist.githubusercontent.com/kylef/5c0475ff02b7c7671d2a/raw/9f442512a46d7a2af7b850d65a7e9bd31edfb09b/swiftenv-install.sh)"
      script:
      - swift build
      - swift test
      - swift build -c release # Check Release build just in case.
notifications:
  email: false
